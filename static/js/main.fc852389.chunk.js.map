{"version":3,"sources":["globalStyles.js","components/Logo/Logo.js","components/ItemCard/itemCardStyles.js","components/ItemCard/CardLabels.js","components/Icons/TrashBin.js","components/InlineEdit/InlineEdit.js","components/ItemCard/Description.js","components/Context/namesContext.js","components/ItemCard/SelectNames.js","components/ItemCard/SplitAmount.js","components/ItemCard/ItemCard.js","components/ItemList/ItemList.js","components/TotalCard/totalCardStyles.js","components/TotalCard/NameCard.js","components/Icons/AddUser.js","components/TotalCard/NameForm.js","components/TotalCard/TotalCardLabels.js","components/TotalCard/TotalCard.js","App.js","serviceWorker.js","index.js"],"names":["theme","MainCont","styled","div","AddBtn","DeleteBtn","Txt","p","InputTxt","input","DollarSign","LogoCont","Title","h1","Logo","ItemCont","Display","Column","LabelCont","LabelTxt","Flex","CardLabels","TrashBin","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","points","d","x1","y1","x2","y2","InlineEdit","text","type","placeholder","children","childRef","props","useState","isEditing","setEditing","useEffect","current","focus","onBlur","onKeyDown","e","event","key","allKeys","indexOf","handleKeyDown","onClick","Description","inputRef","useRef","textareaRef","task","setTask","description","setDescription","ref","name","value","onChange","target","NamesContext","React","createContext","NamesProvider","Provider","NamesConsumer","Consumer","SelectNames","nameList","SplitAmount","ItemCard","item","items","setItems","id","filter","el","ListCont","ItemList","map","TotalCardCont","DisplayCard","Container","TotalLabelCont","TotalLabelTxt","NameInput","AddNameBtn","button","Form","NameCardCont","NameCard","single","names","setNames","splitAmounts","nameText","AddUser","cx","cy","r","NameForm","inputText","setInputText","setSplitAmounts","preventDefault","Math","random","checked","amountsOwed","TotalCardLabels","TotalCard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc852389.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const theme = {\n    headingFont: `\"Comfortaa\", cursive`,\n    bodyFont: `\"Roboto\", sans-serif`,\n    bodyFontColor: \"#141414\",\n    headingFontColor: \"#FFF\",\n    primaryColor: \"#FFF\",\n    beforeHoverColor: \"darkgrey\",\n    hoverColor: \"#0080FE\",\n    h1FontSize: \"3.5rem\",\n    h2FontSize: \"2rem\",\n    bodyFontSize: \"18px\",\n    skinnyWindowSize: \"414px\",\n    tabletSize: \"768px\",\n    smallLaptopSize: \"1024px\",\n    desktopSize: \"1200px\",\n}\n\nexport const MainCont = styled.div`\n    width: 1000px;\n    margin: 0 auto;\n`\nexport const AddBtn = styled.div`\n    background-color: #fff;\n    cursor: pointer;\n    outline: none;\n    box-shadow: none;\n    border: 3px solid ${theme.primaryColor};\n    border-radius: 20px;\n    padding: 1rem;\n    width: 115px;\n    margin: 1rem 2.25rem;\n`\nexport const DeleteBtn = styled.div`\n    background-color: transparent;\n    cursor: pointer;\n    outline: none;\n    color: ${theme.beforeHoverColor};\n    margin: 0.5rem;\n\n    :hover {\n        color: red;\n    }\n`\nexport const Txt = styled.p`\n    font-family: ${theme.bodyFont};\n    font-size: ${theme.bodyFontSize};\n    color: ${theme.bodyFontColor};\n    font-weight: 400;\n    line-height: 22px;\n`\nexport const InputTxt = styled.input`\n    font-family: ${theme.bodyFont};\n    font-size: ${theme.bodyFontSize};\n    color: ${theme.bodyFontColor};\n    font-weight: 400;\n    line-height: 22px;\n`\nexport const DollarSign = styled.p`\n    font-family: ${theme.bodyFont};\n    font-size: ${theme.bodyFontSize};\n    color: ${theme.bodyFontColor};\n    font-weight: 400;\n    line-height: 22px;\n    margin: 0 0.25rem 0 0;\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../globalStyles\";\n\nexport const LogoCont = styled.div`\n    margin: 1rem 0.5rem;\n`\nexport const Title = styled.h1`\n    color: ${theme.headingFontColor};\n    font-family: ${theme.headingFont};\n    font-size: ${theme.h1FontSize};\n    font-weight: 800;\n`\n\nconst Logo = () => {\n    return (\n        <LogoCont>\n            <Title>cost buddy</Title>\n        </LogoCont>\n    )\n}\n\nexport default Logo;","import styled from \"styled-components\";\nimport { theme } from \"../../globalStyles\";\n\n//////////// ItemCard\n\nexport const ItemCont = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\nexport const Display = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    background-color: #fff;\n    border-radius: 20px;\n    padding: 2rem;\n`\nexport const Column = styled.div`\n    width: 300px;\n`\nexport const ItemNum = styled.p`\n    color: ${theme.headingFontColor};\n    font-family: ${theme.headingFont};\n    font-size: ${theme.h1FontSize};\n    font-weight: 800;\n    margin: 1rem 0.5rem;\n`\n\n//////////// CardLabels\n\nexport const LabelCont = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 2rem 2rem 1rem;\n`\nexport const LabelTxt = styled.h1`\n    color: ${theme.headingFontColor};\n    font-family: ${theme.bodyFont};\n    font-size: ${theme.bodyFontSize};\n    font-weight: 800;\n    text-transform: capitalize;\n`\n\n//////////// Description\n\nexport const Flex = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin: 0.25rem 0;\n`\n","import React from \"react\";\nimport { LabelCont, LabelTxt } from \"./itemCardStyles\";\n\nconst CardLabels = () => {\n    return (\n        <LabelCont>\n            <LabelTxt>item description</LabelTxt>\n            <LabelTxt>names</LabelTxt>\n            <LabelTxt>select all ({\"8\"})</LabelTxt>\n            <LabelTxt>split amount</LabelTxt>\n        </LabelCont>\n    )\n}\n\nexport default CardLabels;","import React from \"react\";\n\nconst TrashBin = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-trash-2\">\n            <polyline points=\"3 6 5 6 21 6\"></polyline>\n            <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n        <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n        <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n        </svg>\n    )\n}\n\nexport default TrashBin;","import React, { useState, useEffect } from \"react\";\nimport { Txt } from \"../../globalStyles\";\n\n\nconst InlineEdit = ({ text, type, placeholder, children, childRef, ...props }) => {\n\n  const [isEditing, setEditing] = useState(false);\n\n  useEffect(() => {\n    if (childRef && childRef.current && isEditing === true) {\n      childRef.current.focus();\n    }\n  }, [isEditing, childRef]);\n\n  const handleKeyDown = (event, type) => {\n    const { key } = event;\n    const keys = [\"Escape\", \"Tab\"];\n    const enterKey = \"Enter\";\n    const allKeys = [...keys, enterKey];\n\n    if (\n        // (type === \"textarea\" && keys.indexOf(key) > -1) ||\n        (type !== \"textarea\" && allKeys.indexOf(key) > -1)\n      ) {\n        setEditing(false);\n      }\n  };\n\n  return (\n    <section {...props}>\n      {isEditing ? (\n        <div\n          onBlur={() => setEditing(false)}\n          onKeyDown={e => handleKeyDown(e, type)}\n        >\n          {children}\n        </div>\n\n      ) : (\n          \n        <div\n          onClick={() => setEditing(true)}\n        >\n          <Txt>\n            {text || placeholder || \"Editable content\"}\n          </Txt>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default InlineEdit;","import React, { useState, useRef } from \"react\";\nimport { InputTxt, DollarSign } from \"../../globalStyles\";\nimport InlineEdit from \"../InlineEdit/InlineEdit\";\nimport { Flex } from \"./itemCardStyles\";\n\nconst Description = () => {\n    const inputRef = useRef();\n    const textareaRef = useRef();\n\n    const [task, setTask] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    return (\n        <>\n            <InlineEdit\n                text={description}\n                placeholder=\"Description\"\n                childRef={textareaRef}\n                type=\"input\"\n                >\n                <InputTxt\n                    ref={textareaRef}\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    value={description}\n                    onChange={e => setDescription(e.target.value)}\n            />\n            </InlineEdit>\n            <Flex>\n                <DollarSign>{\"$\"}</DollarSign>\n                <InlineEdit\n                    text={task}\n                    placeholder=\"Price\"\n                    childRef={inputRef}\n                    type=\"input\"\n                >  \n                <InputTxt\n                    ref={inputRef}\n                    type=\"text\"\n                    name=\"task\"\n                    placeholder=\"Price\"\n                    value={task}\n                    onChange={e => setTask(e.target.value)}\n                />\n            </InlineEdit>\n            </Flex>\n        </>\n    )\n\n};\n\nexport default Description;","import React from \"react\";\n\nconst NamesContext = React.createContext()\n\nconst NamesProvider = NamesContext.Provider\nconst NamesConsumer = NamesContext.Consumer\n\nexport { NamesProvider, NamesConsumer }\n","import React from \"react\";\nimport { Txt } from \"../../globalStyles\";\nimport { NamesConsumer } from \"../Context/namesContext\";\n\n\nconst SelectNames = () => {\n    return (\n    \n            <NamesConsumer>\n                { (nameList) => {\n                    return (\n                        <Txt> \n                            Hello {nameList} \n                        </Txt>\n                    )\n                }\n                }\n            </NamesConsumer>\n        \n    )\n};\n\nexport default SelectNames;","import React from \"react\";\nimport { Txt } from \"../../globalStyles\";\n\n\nconst SplitAmount = () => {\n    return (\n        <div>\n            <Txt>{\"split amount based on total and number of checkboxes checked. Need to round up.\"}</Txt>\n        </div>\n    )\n};\n\nexport default SplitAmount;","import React from \"react\";\nimport { DeleteBtn } from \"../../globalStyles\";\nimport { ItemCont, Display, Column, ItemNum } from \"./itemCardStyles\";\nimport CardLabels from \"./CardLabels\";\nimport TrashBin from \"../Icons/TrashBin\";\nimport Description from \"./Description\";\nimport SelectNames from \"./SelectNames\";\nimport SplitAmount from \"./SplitAmount\";\n\n\nconst ItemCard = ({item, items, setItems}) => {\n\n    const deleteItemHandler = () => {\n        setItems(items.filter(el => el.id !== item.id));\n    };\n\n    const ItemCardId = item.id + 1;\n\n    return (\n        <ItemCont>\n            {/* <ItemNum>{ItemCardId}</ItemNum> */}\n            <div>\n                <CardLabels/>\n                <Display>\n                    <Column>\n                        <Description/>\n                    </Column>\n\n                    <Column>\n                        <SelectNames/>\n                    </Column>\n\n                    <Column>\n                        <SplitAmount/>\n                    </Column>\n                </Display>\n            </div>\n\n            <DeleteBtn onClick={deleteItemHandler}>\n                <TrashBin/>\n            </DeleteBtn>\n        </ItemCont>\n    )\n}\n\nexport default ItemCard;","import React from \"react\";\nimport ItemCard from \"../ItemCard/ItemCard\";\n\nimport styled from \"styled-components\";\n\nexport const ListCont = styled.div`\n    width: 1000px;\n    margin: 3rem auto;\n`\n\nconst ItemList = ({items, setItems}) => {\n    return (\n        <ListCont>\n            <ul>\n                {items.map((item) => (\n                    <ItemCard\n                        key={item.id}\n                        item={item}\n                        items={items}\n                        setItems={setItems}\n                    />\n                ))}\n            </ul>\n        </ListCont>\n    )\n};\n\nexport default ItemList;","import styled from \"styled-components\";\nimport { theme } from \"../../globalStyles\";\n\n////  Total Card\n\nexport const TotalCardCont = styled.div`\n    margin: 0 auto;\n`\nexport const DisplayCard = styled.div`\n    background-color: #fff;\n    border-radius: 20px;\n    padding: 1rem 2rem;\n    margin: 0 auto;\n`\nexport const Container = styled.div`\n    margin: 0 auto;\n`\n\n////  Total Card Labels\n\nexport const TotalLabelCont = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 2rem 2rem 1rem;\n`\nexport const TotalLabelTxt = styled.p`\n    color: ${theme.headingFontColor};\n    font-family: ${theme.bodyFont};\n    font-size: ${theme.bodyFontSize};\n    font-weight: 800;\n    text-transform: capitalize;\n`\n////  Name Form\n\nexport const NameInput = styled.input`\n    box-shadow: none;\n    border-radius: 15px;\n    padding: 0.5rem;\n    font-size: ${theme.bodyFontSize};\n    background-color: transparent;\n    cursor: pointer;\n    outline: none;\n    box-shadow: none;\n    border: 2px solid ${theme.beforeHoverColor};\n\n    :hover {\n        border: 2px solid ${theme.hoverColor};\n    }\n    :focus {\n        border: 2px solid ${theme.hoverColor};\n    }\n`\nexport const AddNameBtn = styled.button`\n    background-color: transparent;\n    cursor: pointer;\n    outline: none;\n    border: 2px solid ${theme.beforeHoverColor};\n    border-radius: 15px;\n    margin: 0.5rem;\n    padding: 0.25rem 0.5rem;\n    color: ${theme.beforeHoverColor};\n\n    :hover {\n        border: 2px solid ${theme.hoverColor};\n        color: ${theme.hoverColor};\n    }\n`\nexport const Form = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\n////  Name Card \n\nexport const NameCardCont = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 0 0 0.5rem;\n`\nexport const Flex = styled.div`\n    display: flex;\n    flex-direction: row;\n`","import React from \"react\";\nimport { DeleteBtn, DollarSign, Txt } from \"../../globalStyles\";\nimport { NameCardCont, Flex } from \"./totalCardStyles\";\nimport TrashBin from \"../Icons/TrashBin\";\n\nconst NameCard = ({ single, names, setNames, splitAmounts, nameText }) => {\n\n    const deleteNameHandler = () => {\n        setNames(names.filter(el => el.id !== single.id));\n    };\n\n    return (\n        <NameCardCont>\n            <Txt>{nameText}</Txt>\n            <Flex>\n                <DollarSign>{\"$\"}</DollarSign>\n                <Txt>{splitAmounts}</Txt>\n            </Flex>\n\n            <DeleteBtn onClick={deleteNameHandler}>\n                <TrashBin/>\n            </DeleteBtn>\n        </NameCardCont>\n    )\n\n};\n\nexport default NameCard;","import React from \"react\";\n\nconst AddUser = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-user-plus\">\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n            <circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle>\n            <line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line>\n            <line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line>\n        </svg>\n    )\n}\n\nexport default AddUser;","import React from \"react\";\nimport { NameInput, AddNameBtn, Form } from \"./totalCardStyles\";\nimport AddUser from \"../Icons/AddUser\";\n\nconst NameForm = ({setNames, names, inputText, setInputText, splitAmounts, setSplitAmounts}) => {\n    \n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    };\n\n    const addNameHandler = (e) => {\n        e.preventDefault();\n            setNames([\n                ...names,\n                { id: Math.random() * 1000,\n                  nameText: inputText,\n                  checked: false,\n                  amountsOwed: splitAmounts\n                }\n            ]);\n            setInputText(\"\");\n            setSplitAmounts([\"0\"]);\n      }\n\n    return (\n        <form>\n            <Form>\n            <NameInput\n                value={inputText}\n                onChange={inputTextHandler}\n                type=\"text\"\n                placeholder=\"Add new name\"\n            />\n            <AddNameBtn\n                onClick={addNameHandler}\n                type=\"submit\"\n            >\n                    <AddUser/>\n            </AddNameBtn>\n        </Form>\n        </form>\n    )\n}\n\nexport default NameForm;","import React from \"react\";\nimport { TotalLabelCont, TotalLabelTxt } from \"./totalCardStyles\";\n\nconst TotalCardLabels = () => {\n\n    return (\n        <TotalLabelCont>\n            <TotalLabelTxt>name</TotalLabelTxt>\n            <TotalLabelTxt>total amount</TotalLabelTxt>\n            <TotalLabelTxt>delete</TotalLabelTxt>\n        </TotalLabelCont>\n    )\n};\n\nexport default TotalCardLabels;","import React, { useState } from \"react\";\nimport { TotalCardCont, DisplayCard, Container } from \"../TotalCard/totalCardStyles\";\nimport NameCard from \"./NameCard\";\nimport NameForm from \"./NameForm\";\nimport TotalCardLabels from \"./TotalCardLabels\";\n\nconst TotalCard = ({names, setNames, splitAmounts, setSplitAmounts}) => {\n    const [inputText, setInputText] = useState(\"\");\n\n    return (\n        <TotalCardCont>\n        <TotalCardLabels/>\n        <DisplayCard>\n            <Container>\n                <NameForm\n                    inputText={inputText}\n                    setInputText={setInputText}\n                    names={names}\n                    setNames={setNames}\n                    splitAmounts={splitAmounts}\n                    setSplitAmounts={setSplitAmounts}\n                    />\n            <ul>\n                {names.map((single) => (\n                    <NameCard\n                        key={single.id}\n                        single={single}\n                        nameText={single.nameText}\n                        setInputText={setInputText}\n                        names={names}\n                        setNames={setNames}\n                        splitAmounts={splitAmounts}\n                        setSplitAmounts={setSplitAmounts}\n                    />\n                ))}\n            </ul>\n            </Container>\n        </DisplayCard>\n        </TotalCardCont>\n    )\n\n};\n\nexport default TotalCard;","import React, { useState } from 'react';\nimport \"./reset.css\";\nimport './App.css';\nimport { MainCont, AddBtn, Txt } from \"./globalStyles\";\nimport Logo from './components/Logo/Logo';\nimport ItemList from './components/ItemList/ItemList';\nimport TotalCard from './components/TotalCard/TotalCard';\nimport { NamesProvider } from './components/Context/namesContext';\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [names, setNames] = useState([]);\n  const [splitAmounts, setSplitAmounts] = useState([]);\n\n  const addItemHandler = (e) => {\n    e.preventDefault();\n        setItems([\n            ...items,\n            { id: Math.random() * 1000 }\n        ]);\n  }\n\n  return (\n    <>\n      <Logo/>\n      <MainCont>\n        <NamesProvider value=\"TESTTTTTTT\">\n          <TotalCard\n            names={names}\n            setNames={setNames}\n            splitAmounts={splitAmounts}\n            setSplitAmounts={setSplitAmounts}\n          />\n\n          <ItemList\n            items={items}\n            setItems={setItems}\n          />\n          <AddBtn onClick={addItemHandler}>\n            <Txt>Add new item</Txt>\n          </AddBtn>\n        </NamesProvider>\n      </MainCont>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}